package main

import (
	"fmt"
	"reflect"
	"testing"
)

func TestQuickSort(t *testing.T) {
	for _, tc := range []struct {
		input []int
		want  []int
	}{
		{[]int{0}, []int{0}},
		{[]int{1}, []int{1}},
		{[]int{2}, []int{2}},
		{[]int{12}, []int{12}},
		{[]int{1, 1}, []int{1, 1}},
		{[]int{1, 2}, []int{1, 2}},
		{[]int{2, 1}, []int{1, 2}},
		{[]int{2, 2}, []int{2, 2}},
		{[]int{1, 1, 1}, []int{1, 1, 1}},
		{[]int{1, 3, 3}, []int{1, 3, 3}},
		{[]int{1, 2, 3}, []int{1, 2, 3}},
		{[]int{1, 3, 2}, []int{1, 2, 3}},
		{[]int{2, 1, 3}, []int{1, 2, 3}},
		{[]int{2, 3, 1}, []int{1, 2, 3}},
		{[]int{3, 2, 1}, []int{1, 2, 3}},
		{[]int{3, 1, 2}, []int{1, 2, 3}},
		{[]int{1, 1, 1, 1}, []int{1, 1, 1, 1}},
		{[]int{4, 4, 4, 4}, []int{4, 4, 4, 4}},
		{[]int{1, 2, 3, 5}, []int{1, 2, 3, 5}},
		{[]int{5, 1, 2, 3}, []int{1, 2, 3, 5}},
		{[]int{5, 1, 2, 3, 5}, []int{1, 2, 3, 5, 5}},
		{[]int{5, 1, 2, 3, 5, 2}, []int{1, 2, 2, 3, 5, 5}},
		{[]int{8, 2, 5, 1, 3, 1, 7, 5}, []int{1, 1, 2, 3, 5, 5, 7, 8}},
		{[]int{8, 4, 1, 0, 5, 9, 3, 7, 2, 6}, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}},
		{[]int{9, 6, 1, 7, 5, 9, 6, 5, 2, 6}, []int{1, 2, 5, 5, 6, 6, 6, 7, 9, 9}},
		{[]int{9, 6, 1, 7, 5, 9, 6, 5, 2, 0}, []int{0, 1, 2, 5, 5, 6, 6, 7, 9, 9}},
		{[]int{4, 3, 17, 33, 101, 17, 6, 2}, []int{2, 3, 4, 6, 17, 17, 33, 101}},
		{[]int{4, 3, 17, 33, 101, 33, 17, 6, 2}, []int{2, 3, 4, 6, 17, 17, 33, 33, 101}},
		{[]int{4, 3, 17, 33, 101, 34, 17, 6, 2}, []int{2, 3, 4, 6, 17, 17, 33, 34, 101}},
		{[]int{4, 3, 17, 34, 101, 33, 17, 6, 2}, []int{2, 3, 4, 6, 17, 17, 33, 34, 101}},
	} {
		t.Run(fmt.Sprint(tc.input), func(t *testing.T) {
			got := make([]int, len(tc.input))
			copy(got, tc.input)
			if QuickSort(got); !reflect.DeepEqual(got, tc.want) {
				t.Errorf("QuickSort(%v) = %v, want %v", tc.input, got, tc.want)
			}
		})
	}
}
